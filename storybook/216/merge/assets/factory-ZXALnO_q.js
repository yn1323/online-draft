import{r as c}from"./index-BXymfbzT.js";import{I as d}from"./index-CCD6gxM1.js";function m(e,t){return`${e} returned \`undefined\`. Seems you forgot to wrap component within ${t}`}function E(e={}){const{name:t,strict:n=!0,hookName:r="useContext",providerName:o="Provider",errorMessage:i,defaultValue:f}=e,s=c.createContext(f);s.displayName=t;function a(){var g;const l=c.useContext(s);if(!l&&n){const u=new Error(i??m(r,o));throw u.name="ContextError",(g=Error.captureStackTrace)==null||g.call(Error,u,a),u}return l}return[s.Provider,a,s]}function h(...e){return t=>{const n=[];for(const r of e)if(typeof r=="function"){const o=r(t);typeof o=="function"&&n.push(o)}else r&&(r.current=t);if(n.length)return()=>{for(const r of n)r()}}}function y(e){var r,o;let t=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,n=t&&"isReactWarning"in t&&t.isReactWarning;return n?e.ref:(t=(o=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:o.get,n=t&&"isReactWarning"in t&&t.isReactWarning,n?e.props.ref:e.props.ref||e.ref)}const p=e=>{const t=c.memo(c.forwardRef((n,r)=>{const{asChild:o,children:i,...f}=n;if(!o)return c.createElement(e,{...f,ref:r},i);const s=c.Children.only(i);if(!c.isValidElement(s))return null;const a=y(s);return c.cloneElement(s,{...d(f,s.props),ref:r?h(r,a):a})}));return t.displayName=e.displayName||e.name,t},x=()=>{const e=new Map;return new Proxy(p,{apply(t,n,r){return p(r[0])},get(t,n){const r=n;return e.has(r)||e.set(r,p(r)),e.get(r)}})},R=x();export{R as a,h as b,E as c};
