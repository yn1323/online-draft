import{e as E,j as e}from"./stack-BPGBxmP7.js";import{r as G}from"./index-BXymfbzT.js";import{u as I}from"./useFirebaseAuth-BYt-TZqJ.js";import{u as L}from"./useGroup-9kDoIScy.js";import{T as t}from"./text-CvVCgmJx.js";import{V as d}from"./v-stack-Dfms-mlT.js";import{B as l}from"./button-DJPprnzD.js";import{C as b,a as x}from"./card-DlhQdIZJ.js";import"./jsx-runtime-Bw5QeaCk.js";import"./index.esm2017--qHLk4Vu.js";import"./attr-C3Jtgmrz.js";import"./spinner-BfFBc7wa.js";import"./create-slot-recipe-context-BnxH4US7.js";const{withContext:N}=E({key:"badge"}),O=N("span"),m=()=>{var h;const{user:c,loading:D,error:p,signInAnonymous:v,isAuthenticated:n}=I(),{createGroup:B,checkGroupExists:R}=L(),[u,g]=G.useState([]),s=r=>{g(o=>[...o,`${new Date().toLocaleTimeString()}: ${r}`])},$=async()=>{try{s("🔐 匿名認証テスト開始..."),await v(),s("✅ 匿名認証成功")}catch(r){s(`❌ 匿名認証失敗: ${r}`)}},k=async()=>{try{s("📊 Firestore書き込みテスト開始...");const r=await B("テストルーム");s(`✅ グループ作成成功: ${r}`);const o=await R(r);s(`✅ グループ存在確認: ${o?"存在":"不存在"}`)}catch(r){s(`❌ Firestore操作失敗: ${r}`)}},z=()=>{g([])};return D?e.jsx(b,{children:e.jsx(x,{children:e.jsx(t,{children:"Firebase接続中..."})})}):e.jsx(b,{children:e.jsx(x,{children:e.jsxs(d,{gap:4,align:"stretch",children:[e.jsx(t,{fontSize:"lg",fontWeight:"bold",children:"🧪 Firebase接続テスト"}),e.jsxs(t,{children:["認証状態:"," ",e.jsx(O,{colorScheme:n?"green":"red",children:n?`認証済み (${(h=c==null?void 0:c.uid)==null?void 0:h.slice(0,8)}...)`:"未認証"})]}),p&&e.jsxs(t,{color:"red.500",fontSize:"sm",children:["エラー: ",p.message]}),e.jsxs(d,{gap:2,children:[e.jsx(l,{bg:"blue.400",color:"white",onClick:$,disabled:n,_hover:{bg:"blue.500"},_active:{bg:"blue.600"},children:"匿名認証テスト"}),e.jsx(l,{bg:"green.400",color:"white",onClick:k,disabled:!n,_hover:{bg:"green.500"},_active:{bg:"green.600"},children:"Firestoreテスト"}),e.jsx(l,{bg:"gray.400",color:"white",onClick:z,size:"sm",_hover:{bg:"gray.500"},_active:{bg:"gray.600"},children:"結果クリア"})]}),u.length>0&&e.jsxs(d,{gap:1,align:"stretch",children:[e.jsx(t,{fontSize:"md",fontWeight:"bold",children:"テスト結果:"}),u.map((r,o)=>e.jsx(t,{fontSize:"sm",fontFamily:"mono",children:r},o))]})]})})})};try{m.displayName="FirebaseTest",m.__docgenInfo={description:"Firebase接続テスト用開発コンポーネント",displayName:"FirebaseTest",props:{}}}catch{}const ee={title:"Dev/FirebaseTest",component:m,parameters:{layout:"centered"}},a={},i={};var f,j,y,F,_;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:"{}",...(y=(j=a.parameters)==null?void 0:j.docs)==null?void 0:y.source},description:{story:`デフォルト表示
Firebase接続テスト機能`,...(_=(F=a.parameters)==null?void 0:F.docs)==null?void 0:_.description}}};var C,S,T,w,A;i.parameters={...i.parameters,docs:{...(C=i.parameters)==null?void 0:C.docs,source:{originalSource:`{
  // NOTE: 実際にはloadingプロップを追加する際に対応
}`,...(T=(S=i.parameters)==null?void 0:S.docs)==null?void 0:T.source},description:{story:`ローディング状態
Firebase接続中の表示`,...(A=(w=i.parameters)==null?void 0:w.docs)==null?void 0:A.description}}};const re=["Default","Loading"];export{a as Default,i as Loading,re as __namedExportsOrder,ee as default};
