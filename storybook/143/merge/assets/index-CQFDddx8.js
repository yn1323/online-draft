import{c as v}from"./index-BRNWFSEf.js";import{c as u,u as p,v as h}from"./index-Dcv8hpMz.js";import{c as k}from"./index-CrjboX4Z.js";var f=v("avatar").parts("root","image","fallback"),i=f.build(),g=e=>{var t;return((t=e.ids)==null?void 0:t.root)??`avatar:${e.id}`},m=e=>{var t;return((t=e.ids)==null?void 0:t.image)??`avatar:${e.id}:image`},b=e=>{var t;return((t=e.ids)==null?void 0:t.fallback)??`avatar:${e.id}:fallback`},y=e=>e.getById(g(e)),c=e=>e.getById(m(e));function N(e,t){const{state:a,send:r,prop:d,scope:s}=e,o=a.matches("loaded");return{loaded:o,setSrc(l){const n=c(s);n==null||n.setAttribute("src",l)},setLoaded(){r({type:"img.loaded",src:"api"})},setError(){r({type:"img.error",src:"api"})},getRootProps(){return t.element({...i.root.attrs,dir:d("dir"),id:g(s)})},getImageProps(){return t.img({...i.image.attrs,hidden:!o,dir:d("dir"),id:m(s),"data-state":o?"visible":"hidden",onLoad(){r({type:"img.loaded",src:"element"})},onError(){r({type:"img.error",src:"element"})}})},getFallbackProps(){return t.element({...i.fallback.attrs,dir:d("dir"),id:b(s),hidden:o,"data-state":o?"hidden":"visible"})}}}var O=u({initialState(){return"loading"},effects:["trackImageRemoval","trackSrcChange"],on:{"src.change":{target:"loading"},"img.unmount":{target:"error"}},states:{loading:{entry:["checkImageStatus"],on:{"img.loaded":{target:"loaded",actions:["invokeOnLoad"]},"img.error":{target:"error",actions:["invokeOnError"]}}},error:{on:{"img.loaded":{target:"loaded",actions:["invokeOnLoad"]}}},loaded:{on:{"img.error":{target:"error",actions:["invokeOnError"]}}}},implementations:{actions:{invokeOnLoad({prop:e}){var t;(t=e("onStatusChange"))==null||t({status:"loaded"})},invokeOnError({prop:e}){var t;(t=e("onStatusChange"))==null||t({status:"error"})},checkImageStatus({send:e,scope:t}){const a=c(t);if(!(a!=null&&a.complete))return;const r=E(a)?"img.loaded":"img.error";e({type:r,src:"ssr"})}},effects:{trackImageRemoval({send:e,scope:t}){const a=y(t);return h(a,{callback(r){Array.from(r[0].removedNodes).find(o=>o.nodeType===Node.ELEMENT_NODE&&o.matches("[data-scope=avatar][data-part=image]"))&&e({type:"img.unmount"})}})},trackSrcChange({send:e,scope:t}){const a=c(t);return p(a,{attributes:["src","srcset"],callback(){e({type:"src.change"})}})}}}});function E(e){return e.complete&&e.naturalWidth!==0&&e.naturalHeight!==0}k()(["dir","id","ids","onStatusChange","getRootNode"]);export{f as a,N as c,O as m};
