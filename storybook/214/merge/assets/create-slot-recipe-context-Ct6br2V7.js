import{g as Y,k as h,f as $,j as p,b as k,h as E,E as _}from"./stack-C7hvTRfV.js";import{r as u}from"./index-BXymfbzT.js";function b(i){const{key:m,recipe:x}=i,t=Y();return u.useMemo(()=>{const N=x||(m!=null?t.getSlotRecipe(m):{});return t.sva(structuredClone(N))},[m,x,t])}const A=i=>i.charAt(0).toUpperCase()+i.slice(1),z=i=>{const{key:m,recipe:x}=i,t=A(m||x.className||"Component"),[N,v]=h({name:`${t}StylesContext`,errorMessage:`use${t}Styles returned is 'undefined'. Seems you forgot to wrap the components in "<${t}.Root />" `}),[C,R]=h({name:`${t}ClassNameContext`,errorMessage:`use${t}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in "<${t}.Root />" `,strict:!1}),[T,P]=h({strict:!1,name:`${t}PropsContext`,providerName:`${t}PropsContext`,defaultValue:{}});function S(s){const{unstyled:o,...e}=s,r=b({key:m,recipe:e.recipe||x}),[a,n]=u.useMemo(()=>r.splitVariantProps(e),[e,r]);return{styles:u.useMemo(()=>o?_:r(a),[o,a,r]),classNames:r.classNameMap,props:n}}function L(s,o={}){const{defaultProps:e}=o,r=a=>{const n=P(),c=u.useMemo(()=>E(e,n,a),[n,a]),{styles:d,classNames:l,props:y}=S(c);return p.jsx(N,{value:d,children:p.jsx(C,{value:l,children:p.jsx(s,{...y})})})};return r.displayName=s.displayName||s.name,r}return{StylesProvider:N,ClassNamesProvider:C,PropsProvider:T,usePropsContext:P,useRecipeResult:S,withProvider:(s,o,e)=>{const{defaultProps:r,...a}=e??{},n=$(s,{},a),c=u.forwardRef((d,l)=>{var g;const y=P(),f=u.useMemo(()=>E(r??{},y,d),[y,d]),{styles:w,props:O,classNames:j}=S(f),V=j[o],M=p.jsx(N,{value:w,children:p.jsx(C,{value:j,children:p.jsx(n,{ref:l,...O,css:[w[o],f.css],className:k(f.className,V)})})});return((g=e==null?void 0:e.wrapElement)==null?void 0:g.call(e,M,f))??M});return c.displayName=s.displayName||s.name,c},withContext:(s,o,e)=>{const r=$(s,{},e),a=u.forwardRef((n,c)=>{const d=v(),l=R(),y=l==null?void 0:l[o];return p.jsx(r,{...n,css:[o?d[o]:void 0,n.css],ref:c,className:k(n.className,y)})});return a.displayName=s.displayName||s.name,a},withRootProvider:L,useStyles:v,useClassNames:R}};export{z as c,b as u};
