{
  "permissions": {
    "allow": [
      "mcp__typescript__move_file",
      "mcp__typescript__move_directory",
      "mcp__typescript__rename_symbol",
      "mcp__typescript__delete_symbol",
      "mcp__typescript__find_references",
      "mcp__typescript__get_definitions",
      "mcp__typescript__get_diagnostics",
      "mcp__typescript__get_module_symbols",
      "mcp__typescript__get_type_in_module",
      "mcp__typescript__get_type_at_symbol",
      "mcp__typescript__get_symbols_in_scope"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf /*)"
    ]
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path | select(endswith(\".ts\") or endswith(\".tsx\") or endswith(\".js\") or endswith(\".jsx\"))' | xargs -I {} sh -c 'echo \"📝 Processing: {}\"; pnpm lint:fix'"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "input=$(cat); message=$(node -e \"const data = JSON.parse(process.argv[1] || '{}'); console.log(data.message || 'Claude Code 作業中');\" \"$input\"); if command -v tsx >/dev/null 2>&1; then tsx scripts/notify-slack.ts progress \"Claude Code 入力待ち\" \"$message\"; else echo 'tsx not found, skipping Slack notification'; fi"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "input=$(cat); transcript_path=$(node -e \"const data = JSON.parse(process.argv[1] || '{}'); console.log(data.transcript_path || '');\" \"$input\"); if [[ -f \"$transcript_path\" ]] && command -v tsx >/dev/null 2>&1; then task=$(node -e \"const fs = require('fs'); try { const data = JSON.parse(fs.readFileSync(process.argv[1], 'utf8')); console.log((data[data.length-2]?.content || '不明なタスク').substring(0,50)); } catch(e) { console.log('不明なタスク'); }\" \"$transcript_path\"); result=$(node -e \"const fs = require('fs'); try { const data = JSON.parse(fs.readFileSync(process.argv[1], 'utf8')); console.log((data[data.length-1]?.content || '完了').substring(0,100)); } catch(e) { console.log('完了'); }\" \"$transcript_path\"); tsx scripts/notify-slack.ts complete \"$task\" \"$result\"; else echo 'hooks: transcript not found or tsx unavailable'; fi"
          }
        ]
      },
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/scripts/notify-devlog.sh"
          }
        ]
      }
    ]
  }
}
